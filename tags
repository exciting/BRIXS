!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
10	mod_hdf5.F90	/^        10 continue$/;"	l	function:hdf5_exist_group	file:
10	mod_hdf5.F90	/^        10 continue$/;"	l	subroutine:hdf5_create_file	file:
10	mod_hdf5.F90	/^        10 continue$/;"	l	subroutine:hdf5_create_group	file:
10	mod_hdf5.F90	/^        10 continue$/;"	l	subroutine:hdf5_get_dims	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_read_array_block_d	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_read_array_block_i4	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_read_array_c	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_read_array_d	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_read_array_i4	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_write_array_c	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_write_array_d	file:
10	mod_hdf5.F90	/^    10 continue$/;"	l	subroutine:hdf5_write_array_i4	file:
10	mod_phdf5.F90	/^        10 continue$/;"	l	function:phdf5_exist_group	file:
10	mod_phdf5.F90	/^        10 continue$/;"	l	subroutine:phdf5_get_dims	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_close_file	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_create_file	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_create_group	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_finalize	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_initialize	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_open_file	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_setup_read	file:
10	mod_phdf5.F90	/^    10 continue$/;"	l	subroutine:phdf5_setup_write	file:
10	mod_phdf5.F90	/^  10 continue$/;"	l	subroutine:phdf5_read_array_d	file:
10	mod_phdf5.F90	/^  10 continue$/;"	l	subroutine:phdf5_read_array_i	file:
10	mod_phdf5.F90	/^  10 continue$/;"	l	subroutine:phdf5_write_array_d	file:
998	m_config.f90	/^998 continue$/;"	l	subroutine:CFG_write	file:
998	m_config.f90	/^998 continue$/;"	l	subroutine:CFG_write_markdown	file:
998	m_config.f90	/^998 write(err_string, "(A,I0,A,I0)") " IOSTAT = ", io_state, &$/;"	l	subroutine:CFG_read_file	file:
999	m_config.f90	/^999 close(my_unit, iostat=io_state)$/;"	l	subroutine:CFG_read_file	file:
999	m_config.f90	/^999 continue ! If there was an error, the routine will end here$/;"	l	subroutine:CFG_write	file:
999	m_config.f90	/^999 continue ! If there was an error, the routine will end here$/;"	l	subroutine:CFG_write_markdown	file:
A	debug_b.F90	/^  complex(8), allocatable :: A_/;"	v	program:rixs
A_inter	debug_b.F90	/^  complex(8), allocatable :: A_inter(/;"	v	program:rixs
A_matrix	debug_b.F90	/^  complex(8), allocatable :: A_inter(:), A(:,:), A_matrix(/;"	v	program:rixs
B	debug_b.F90	/^  complex(8), allocatable :: chi_core(:,:,:), pmat(:), B(/;"	v	program:rixs
B_matrix	debug_b.F90	/^  complex(8), allocatable :: B_matrix(/;"	v	program:rixs
CFG_check	m_config.f90	/^  subroutine CFG_check(/;"	s
CFG_clear	m_config.f90	/^  subroutine CFG_clear(/;"	s
CFG_get_size	m_config.f90	/^  subroutine CFG_get_size(/;"	s
CFG_get_type	m_config.f90	/^  subroutine CFG_get_type(/;"	s
CFG_integer_type	m_config.f90	/^  integer, parameter :: CFG_integer_type /;"	v	module:m_config
CFG_logic_type	m_config.f90	/^  integer, parameter :: CFG_logic_type /;"	v	module:m_config
CFG_num_types	m_config.f90	/^  integer, parameter :: CFG_num_types /;"	v	module:m_config
CFG_read_file	m_config.f90	/^  subroutine CFG_read_file(/;"	s
CFG_real_type	m_config.f90	/^  integer, parameter :: CFG_real_type /;"	v	module:m_config
CFG_sort	m_config.f90	/^  subroutine CFG_sort(/;"	s
CFG_string_type	m_config.f90	/^  integer, parameter :: CFG_string_type /;"	v	module:m_config
CFG_t	m_config.f90	/^  type CFG_t$/;"	t
CFG_type_names	m_config.f90	/^  character(len=10), parameter :: CFG_type_names(/;"	v	module:m_config
CFG_unknown_type	m_config.f90	/^  integer, parameter :: CFG_unknown_type /;"	v	module:m_config
CFG_update_from_arguments	m_config.f90	/^  subroutine CFG_update_from_arguments(/;"	s
CFG_write	m_config.f90	/^  subroutine CFG_write(/;"	s
CFG_write_markdown	m_config.f90	/^  subroutine CFG_write_markdown(/;"	s
add_get_int	m_config.f90	/^  subroutine add_get_int(/;"	s
add_get_int_array	m_config.f90	/^  subroutine add_get_int_array(/;"	s
add_get_logic	m_config.f90	/^  subroutine add_get_logic(/;"	s
add_get_logic_array	m_config.f90	/^  subroutine add_get_logic_array(/;"	s
add_get_real	m_config.f90	/^  subroutine add_get_real(/;"	s
add_get_real_array	m_config.f90	/^  subroutine add_get_real_array(/;"	s
add_get_string	m_config.f90	/^  subroutine add_get_string(/;"	s
add_get_string_array	m_config.f90	/^  subroutine add_get_string_array(/;"	s
add_int	m_config.f90	/^  subroutine add_int(/;"	s
add_int_array	m_config.f90	/^  subroutine add_int_array(/;"	s
add_logic	m_config.f90	/^  subroutine add_logic(/;"	s
add_logic_array	m_config.f90	/^  subroutine add_logic_array(/;"	s
add_real	m_config.f90	/^  subroutine add_real(/;"	s
add_real_array	m_config.f90	/^  subroutine add_real_array(/;"	s
add_string	m_config.f90	/^  subroutine add_string(/;"	s
add_string_array	m_config.f90	/^  subroutine add_string_array(/;"	s
alpha	debug_b.F90	/^  complex(8) :: alpha,/;"	v	program:rixs
alpha	rixs_oscstr.F90	/^  complex(8) :: alpha,/;"	v	program:rixs_oscstr
barrier	modmpi.F90	/^    subroutine barrier(/;"	s	module:modmpi
beta	debug_b.F90	/^  complex(8) :: alpha, beta$/;"	v	program:rixs
beta	rixs_oscstr.F90	/^  complex(8) :: alpha, beta$/;"	v	program:rixs_oscstr
binary_search_variable	m_config.f90	/^  subroutine binary_search_variable(/;"	s
block1d	mod_blocks.F90	/^  type :: block1d$/;"	t	module:mod_blocks
block2d	mod_blocks.F90	/^  type :: block2d$/;"	t	module:mod_blocks
block3d	mod_blocks.F90	/^  type :: block3d$/;"	t	module:mod_blocks
blocks_	rixs_pathway.F90	/^  integer :: blocks_$/;"	v	program:rixs_pathway
blocksize	mod_blocks.F90	/^    integer(4) :: blocksize /;"	k	type:block1d
blocksize	mod_blocks.F90	/^    integer(4), dimension(2) :: blocksize /;"	k	type:block2d
blocksize	mod_blocks.F90	/^    integer(4), dimension(3) :: blocksize /;"	k	type:block3d
blsz2_	debug_b.F90	/^  integer(4) :: nblocks_, blsz_, blsz2_,/;"	v	program:rixs
blsz_	debug_b.F90	/^  integer(4) :: nblocks_, blsz_,/;"	v	program:rixs
blsz_	rixs_oscstr.F90	/^  integer(4) :: nblocks_, blsz_,/;"	v	program:rixs_oscstr
blsz_	rixs_pathway.F90	/^  integer(4) :: nblocks_, blsz_,/;"	v	program:rixs_pathway
blsz_k	debug_b.F90	/^  integer(4) :: nk_, blsz_k,/;"	v	program:rixs
blsz_k	rixs_oscstr.F90	/^  integer(4) :: nblocks_, blsz_,nk_, k, k2, blsz_k$/;"	v	program:rixs_oscstr
blsz_k	rixs_pathway.F90	/^  integer(4) :: nblocks_, blsz_,nk_, k, blsz_k$/;"	v	program:rixs_pathway
broad	debug_b.F90	/^  real(8) :: broad,/;"	v	program:rixs
broad	mod_io.F90	/^    real(8) :: broad$/;"	k	type:input
broad	rixs_oscstr.F90	/^  real(8) :: broad,/;"	v	program:rixs_oscstr
broad2	debug_b.F90	/^  real(8) :: broad, broad2$/;"	v	program:rixs
broad2	rixs_oscstr.F90	/^  real(8) :: broad, broad2$/;"	v	program:rixs_oscstr
chi_core	debug_b.F90	/^  complex(8), allocatable :: chi_core(/;"	v	program:rixs
chi_core_b	debug_b.F90	/^  type(block2d) ::chi_core_b,/;"	v	program:rixs
comm	modmpi.F90	/^    integer :: comm$/;"	k	type:mpiinfo
core	debug_b.F90	/^  type(io) :: optical, core$/;"	v	program:rixs
core	rixs_pathway.F90	/^  type(io) :: optical, core$/;"	v	program:rixs_pathway
core_id	rixs_pathway.F90	/^  integer(hid_t) :: core_id,/;"	v	program:rixs_pathway
dataset2_id	rixs_pathway.F90	/^  integer(hid_t) :: t1_id, dataset2_id$/;"	v	program:rixs_pathway
datasetname	rixs_pathway.F90	/^   & fname_inter, gname, gname2, ik, datasetname /;"	v	program:rixs_pathway
dcontent	mod_blocks.F90	/^    real(8), allocatable :: dcontent(/;"	k	type:block1d
dcontent	mod_blocks.F90	/^    real(8), allocatable :: dcontent(/;"	k	type:block2d
dp	m_config.f90	/^  integer, parameter :: dp /;"	v	module:m_config
eigvec2_b	debug_b.F90	/^  type(block2d) ::chi_core_b, eigvec_b, eigvec2_b$/;"	v	program:rixs
eigvec_b	debug_b.F90	/^  type(block2d) ::chi_core_b, eigvec_b,/;"	v	program:rixs
eigvec_b	rixs_pathway.F90	/^  type(block2d) :: eigvec_b$/;"	v	program:rixs_pathway
eigvecs	mod_io.F90	/^    complex(8), allocatable :: eigvecs(/;"	k	type:io
energy_id	rixs_oscstr.F90	/^  integer(hid_t) :: energy_id,/;"	v	program:rixs_oscstr
ensure_free_storage	m_config.f90	/^  subroutine ensure_free_storage(/;"	s
eval_b	debug_b.F90	/^  type(block1d) :: eval_b,/;"	v	program:rixs
evals	mod_io.F90	/^    real(8), allocatable :: evals(/;"	k	type:io
evals_b	rixs_oscstr.F90	/^  type(block1d) :: vecA_b, evals_b$/;"	v	program:rixs_oscstr
evecs_b	rixs_oscstr.F90	/^  type(block2d) :: evecs_b$/;"	v	program:rixs_oscstr
finitmpi	modmpi.F90	/^    subroutine finitmpi$/;"	s	module:modmpi
firstinnode	modmpi.F90	/^  logical :: splittfile, firstinnode$/;"	v	module:modmpi
firstinnode_comm	modmpi.F90	/^  integer(4) :: firstinnode_comm$/;"	v	module:modmpi
firstofblock	mod_blocks.F90	/^  function firstofblock(/;"	f	module:mod_blocks
firstofset	modmpi.F90	/^    function firstofset(/;"	f	module:modmpi
fname_core	debug_b.F90	/^  character(1024) :: fname_core,/;"	v	program:rixs
fname_core	rixs_oscstr.F90	/^  character(1024) :: fname_core,/;"	v	program:rixs_oscstr
fname_core	rixs_pathway.F90	/^  character(1024) :: fname_core,/;"	v	program:rixs_pathway
fname_inter	rixs_oscstr.F90	/^  character(1024) :: fname_core, fname_optical,fname_pmat, fname_output, &$/;"	v	program:rixs_oscstr
fname_inter	rixs_pathway.F90	/^  character(1024) :: fname_core, fname_optical,fname_pmat, fname_output, &$/;"	v	program:rixs_pathway
fname_optical	debug_b.F90	/^  character(1024) :: fname_core, fname_optical,/;"	v	program:rixs
fname_optical	rixs_oscstr.F90	/^  character(1024) :: fname_core, fname_optical,/;"	v	program:rixs_oscstr
fname_optical	rixs_pathway.F90	/^  character(1024) :: fname_core, fname_optical,/;"	v	program:rixs_pathway
fname_output	rixs_oscstr.F90	/^  character(1024) :: fname_core, fname_optical,fname_pmat, fname_output,/;"	v	program:rixs_oscstr
fname_output	rixs_pathway.F90	/^  character(1024) :: fname_core, fname_optical,fname_pmat, fname_output,/;"	v	program:rixs_pathway
fname_pmat	debug_b.F90	/^  character(1024) :: fname_core, fname_optical,fname_pmat$/;"	v	program:rixs
fname_pmat	rixs_oscstr.F90	/^  character(1024) :: fname_core, fname_optical,fname_pmat,/;"	v	program:rixs_oscstr
fname_pmat	rixs_pathway.F90	/^  character(1024) :: fname_core, fname_optical,fname_pmat,/;"	v	program:rixs_pathway
gen_prod_b	mod_blocks.F90	/^  subroutine gen_prod_b(/;"	s	module:mod_blocks
generate_Avector_b	mod_blocks.F90	/^  subroutine generate_Avector_b(/;"	s	module:mod_blocks
generate_Bvector_b	mod_blocks.F90	/^  subroutine generate_Bvector_b(/;"	s	module:mod_blocks
generate_chi_block	mod_blocks.F90	/^  subroutine generate_chi_block(/;"	s	module:mod_blocks
generate_oscstr_b	mod_blocks.F90	/^  subroutine generate_oscstr_b(/;"	s	module:mod_blocks
generate_tblock	mod_blocks.F90	/^  subroutine generate_tblock(/;"	s	module:mod_blocks
generate_tprime_block	mod_blocks.F90	/^  subroutine generate_tprime_block(/;"	s	module:mod_blocks
get_block1d	mod_blocks.F90	/^  subroutine get_block1d(/;"	s	module:mod_blocks
get_block2d	mod_blocks.F90	/^  subroutine get_block2d(/;"	s	module:mod_blocks
get_eigvecs2D_b	mod_blocks.F90	/^  subroutine get_eigvecs2D_b(/;"	s	module:mod_blocks
get_evals_block	mod_blocks.F90	/^    subroutine get_evals_block(/;"	s	module:mod_blocks
get_fields_string	m_config.f90	/^  subroutine get_fields_string(/;"	s
get_int	m_config.f90	/^  subroutine get_int(/;"	s
get_int_array	m_config.f90	/^  subroutine get_int_array(/;"	s
get_ismap	mod_io.F90	/^  subroutine get_ismap(/;"	s	module:mod_io
get_koulims	mod_io.F90	/^  subroutine get_koulims(/;"	s	module:mod_io
get_logic	m_config.f90	/^  subroutine get_logic(/;"	s
get_logic_array	m_config.f90	/^  subroutine get_logic_array(/;"	s
get_real	m_config.f90	/^  subroutine get_real(/;"	s
get_real_array	m_config.f90	/^  subroutine get_real_array(/;"	s
get_smap	mod_io.F90	/^  subroutine get_smap(/;"	s	module:mod_io
get_string	m_config.f90	/^  subroutine get_string(/;"	s
get_string_array	m_config.f90	/^  subroutine get_string_array(/;"	s
get_var_index	m_config.f90	/^  subroutine get_var_index(/;"	s
global	mod_blocks.F90	/^    integer(4) :: global /;"	k	type:block1d
global	mod_blocks.F90	/^    integer(4), dimension(2) :: global /;"	k	type:block2d
global_core	rixs_pathway.F90	/^  integer :: nkmax, nu_optical, no_optical, nu_core, no_core, global_core,/;"	v	program:rixs_pathway
global_optical	rixs_pathway.F90	/^  integer :: nkmax, nu_optical, no_optical, nu_core, no_core, global_core, global_optical$/;"	v	program:rixs_pathway
gname	rixs_oscstr.F90	/^   & fname_inter, gname,/;"	v	program:rixs_oscstr
gname	rixs_pathway.F90	/^   & fname_inter, gname,/;"	v	program:rixs_pathway
gname2	rixs_oscstr.F90	/^   & fname_inter, gname, gname2,/;"	v	program:rixs_oscstr
gname2	rixs_pathway.F90	/^   & fname_inter, gname, gname2,/;"	v	program:rixs_pathway
gname3	rixs_oscstr.F90	/^   & fname_inter, gname, gname2, gname3,/;"	v	program:rixs_oscstr
hamsiz	debug_b.F90	/^  integer(4) :: nk_, blsz_k, hamsiz,/;"	v	program:rixs
hamsize	mod_io.F90	/^    integer(4) :: hamsize,/;"	k	type:io
handle_error	m_config.f90	/^  subroutine handle_error(/;"	s
hdf5_create_file	mod_hdf5.F90	/^    subroutine hdf5_create_file(/;"	s	module:mod_hdf5
hdf5_create_group	mod_hdf5.F90	/^    subroutine hdf5_create_group(/;"	s	module:mod_hdf5
hdf5_exist_group	mod_hdf5.F90	/^    logical function hdf5_exist_group(/;"	f	module:mod_hdf5
hdf5_finalize	mod_hdf5.F90	/^    subroutine hdf5_finalize$/;"	s	module:mod_hdf5
hdf5_get_dims	mod_hdf5.F90	/^    subroutine hdf5_get_dims(/;"	s	module:mod_hdf5
hdf5_initialize	mod_hdf5.F90	/^    subroutine hdf5_initialize$/;"	s	module:mod_hdf5
hdf5_read_array_block_d	mod_hdf5.F90	/^subroutine hdf5_read_array_block_d(/;"	s
hdf5_read_array_block_i4	mod_hdf5.F90	/^subroutine hdf5_read_array_block_i4(/;"	s
hdf5_read_array_c	mod_hdf5.F90	/^subroutine hdf5_read_array_c(/;"	s
hdf5_read_array_d	mod_hdf5.F90	/^subroutine hdf5_read_array_d(/;"	s
hdf5_read_array_i4	mod_hdf5.F90	/^subroutine hdf5_read_array_i4(/;"	s
hdf5_read_block_d	mod_hdf5.F90	/^    subroutine hdf5_read_block_d(/;"	s	module:mod_hdf5
hdf5_read_block_i4	mod_hdf5.F90	/^    subroutine hdf5_read_block_i4(/;"	s	module:mod_hdf5
hdf5_read_block_z	mod_hdf5.F90	/^    subroutine hdf5_read_block_z(/;"	s	module:mod_hdf5
hdf5_read_c	mod_hdf5.F90	/^    subroutine hdf5_read_c(/;"	s	module:mod_hdf5
hdf5_read_d	mod_hdf5.F90	/^    subroutine hdf5_read_d(/;"	s	module:mod_hdf5
hdf5_read_i4	mod_hdf5.F90	/^    subroutine hdf5_read_i4(/;"	s	module:mod_hdf5
hdf5_read_l	mod_hdf5.F90	/^    subroutine hdf5_read_l(/;"	s	module:mod_hdf5
hdf5_read_z	mod_hdf5.F90	/^    subroutine hdf5_read_z(/;"	s	module:mod_hdf5
hdf5_write_array_c	mod_hdf5.F90	/^subroutine hdf5_write_array_c(/;"	s
hdf5_write_array_d	mod_hdf5.F90	/^subroutine hdf5_write_array_d(/;"	s
hdf5_write_array_i4	mod_hdf5.F90	/^subroutine hdf5_write_array_i4(/;"	s
hdf5_write_c	mod_hdf5.F90	/^    subroutine hdf5_write_c(/;"	s	module:mod_hdf5
hdf5_write_d	mod_hdf5.F90	/^    subroutine hdf5_write_d(/;"	s	module:mod_hdf5
hdf5_write_i4	mod_hdf5.F90	/^    subroutine hdf5_write_i4(/;"	s	module:mod_hdf5
hdf5_write_l	mod_hdf5.F90	/^    subroutine hdf5_write_l(/;"	s	module:mod_hdf5
hdf5_write_z	mod_hdf5.F90	/^    subroutine hdf5_write_z(/;"	s	module:mod_hdf5
i	debug_b.F90	/^  in/;"	v	program:rixs
id	mod_blocks.F90	/^    integer(4) :: id /;"	k	type:block1d
id	mod_blocks.F90	/^    integer(4) :: id /;"	k	type:block3d
id	mod_blocks.F90	/^    integer(4), dimension(2) :: id /;"	k	type:block2d
id	modmpi.F90	/^    integer(4) :: id$/;"	k	type:procgroup
ierr	modmpi.F90	/^    integer(4) :: ierr$/;"	k	type:mpiinfo
ierr	modmpi.F90	/^  integer(4) :: ierr$/;"	v	module:modmpi
ik	rixs_oscstr.F90	/^   & fname_inter, gname, gname2, gname3, ik /;"	v	program:rixs_oscstr
ik	rixs_pathway.F90	/^   & fname_inter, gname, gname2, ik,/;"	v	program:rixs_pathway
il	mod_blocks.F90	/^    integer(4) :: il,/;"	k	type:block1d
il	mod_blocks.F90	/^    integer(4) :: il,/;"	k	type:block2d
initmpi	modmpi.F90	/^    subroutine initmpi$/;"	s	module:modmpi
input	mod_io.F90	/^  type :: input$/;"	t	module:mod_io
inputparam	debug_b.F90	/^  type(input) :: inputparam$/;"	v	program:rixs
inputparam	rixs_oscstr.F90	/^  type(input) :: inputparam$/;"	v	program:rixs_oscstr
inputparam	rixs_pathway.F90	/^  type(input) :: inputparam$/;"	v	program:rixs_pathway
inspect_h5	mod_io.F90	/^  subroutine inspect_h5(/;"	s	module:mod_io
inter_id	rixs_oscstr.F90	/^  integer(hid_t) :: optical_id, output_id, inter_id$/;"	v	program:rixs_oscstr
inter_id	rixs_pathway.F90	/^  integer(hid_t) :: core_id, optical_id, pmat_id, inter_id$/;"	v	program:rixs_pathway
interdim	debug_b.F90	/^  integer :: interdim(/;"	v	program:rixs
interdim	rixs_oscstr.F90	/^  integer :: interdim(/;"	v	program:rixs_oscstr
interdim	rixs_pathway.F90	/^  integer :: interdim(/;"	v	program:rixs_pathway
io	mod_io.F90	/^  type :: io$/;"	t	module:mod_io
ismap	mod_io.F90	/^    integer(4), allocatable :: smap(:,:), ismap(/;"	k	type:io
iu	mod_blocks.F90	/^    integer(4) :: il, iu /;"	k	type:block1d
iu	mod_blocks.F90	/^    integer(4) :: il, iu,/;"	k	type:block2d
jl	mod_blocks.F90	/^    integer(4) :: il, iu, jl,/;"	k	type:block2d
ju	mod_blocks.F90	/^    integer(4) :: il, iu, jl, ju /;"	k	type:block2d
k	debug_b.F90	/^  integer(4) :: nblocks/;"	v	program:rixs
k	rixs_oscstr.F90	/^  integer(4) :: nblocks/;"	v	program:rixs_oscstr
k	rixs_pathway.F90	/^  integer(4) :: nblocks/;"	v	program:rixs_pathway
k1l	mod_blocks.F90	/^    integer(4) :: k1l,/;"	k	type:block2d
k1u	mod_blocks.F90	/^    integer(4) :: k1l, k1u,/;"	k	type:block2d
k2	debug_b.F90	/^  integer(4) :: nblocks_, blsz_, blsz2_, k, k2,/;"	v	program:rixs
k2	rixs_oscstr.F90	/^  integer(4) :: nblocks_, blsz_,nk_, k, k2,/;"	v	program:rixs_oscstr
k2l	mod_blocks.F90	/^    integer(4) :: k1l, k1u, k2l,/;"	k	type:block2d
k2u	mod_blocks.F90	/^    integer(4) :: k1l, k1u, k2l, k2u /;"	k	type:block2d
k3	debug_b.F90	/^  integer(4) :: nk_, blsz_k, hamsiz, k3$/;"	v	program:rixs
kl	mod_blocks.F90	/^    integer(4) :: kl,/;"	k	type:block1d
kl	mod_blocks.F90	/^    integer(4) :: kl,/;"	k	type:block3d
koulims	mod_io.F90	/^    integer(4), allocatable :: smap(:,:), ismap(:,:,:), koulims(/;"	k	type:io
koulims_comb	debug_b.F90	/^  integer(4), allocatable :: koulims_comb(/;"	v	program:rixs
koulims_comb	rixs_pathway.F90	/^  integer(4), allocatable :: koulims_comb(/;"	v	program:rixs_pathway
ku	mod_blocks.F90	/^    integer(4) :: kl, ku /;"	k	type:block1d
ku	mod_blocks.F90	/^    integer(4) :: kl, ku /;"	k	type:block3d
lastofblock	mod_blocks.F90	/^  function lastofblock(/;"	f	module:mod_blocks
lastofset	modmpi.F90	/^    function lastofset(/;"	f	module:modmpi
lastproc	modmpi.F90	/^    function lastproc(/;"	f	module:modmpi
lo	mod_io.F90	/^    integer(4) :: hamsize, lu,uu,lo,/;"	k	type:io
lu	mod_io.F90	/^    integer(4) :: hamsize, lu,/;"	k	type:io
m_config	m_config.f90	/^module m_config$/;"	m
matA_b	debug_b.F90	/^  type(block3d) :: matB_b, matA_b,/;"	v	program:rixs
matB_b	debug_b.F90	/^  type(block3d) :: matB_b,/;"	v	program:rixs
matprod_matmat	mod_matmul.F90	/^  subroutine matprod_matmat(/;"	s	module:mod_matmul
matprod_matvec	mod_matmul.F90	/^  subroutine matprod_matvec(/;"	s	module:mod_matmul
matprod_vecvec	mod_matmul.F90	/^  subroutine matprod_vecvec(/;"	s	module:mod_matmul
matsize2_	rixs_oscstr.F90	/^  integer :: matsize_(1), reduced_(1), matsize2_(/;"	v	program:rixs_oscstr
matsize_	rixs_oscstr.F90	/^  integer :: matsize_(/;"	v	program:rixs_oscstr
matsize_	rixs_pathway.F90	/^  integer :: matsize_(/;"	v	program:rixs_pathway
mod_blocks	mod_blocks.F90	/^module mod_blocks$/;"	m
mod_hdf5	mod_hdf5.F90	/^module mod_hdf5$/;"	m
mod_io	mod_io.F90	/^module mod_io$/;"	m
mod_matmul	mod_matmul.F90	/^module mod_matmul$/;"	m
mod_phdf5	mod_phdf5.F90	/^module mod_phdf5$/;"	m
mod_rixs	mod_rixs.F90	/^module mod_rixs$/;"	m
modmpi	modmpi.F90	/^module modmpi$/;"	m
mpi	modmpi.F90	/^    type(mpii/;"	k	type:procgroup
mpi_allgatherv_ifc	modmpi.F90	/^    subroutine mpi_allgatherv_ifc(/;"	s	module:modmpi
mpiglobal	modmpi.F90	/^  type(mpiinfo) :: mpiglobal$/;"	v	module:modmpi
mpiinfo	modmpi.F90	/^  type mpiinfo$/;"	t	module:modmpi
mpiintercom	modmpi.F90	/^    type(mpiinfo) :: mpiintercom$/;"	k	type:procgroup
mpinodes	modmpi.F90	/^  type(procgroup) :: mpinodes$/;"	v	module:modmpi
nblocks	mod_blocks.F90	/^    integer(4) :: nblocks /;"	k	type:block1d
nblocks	mod_blocks.F90	/^    integer(4) :: nblocks /;"	k	type:block2d
nblocks	mod_blocks.F90	/^    integer(4) :: nblocks /;"	k	type:block3d
nblocks	mod_io.F90	/^    integer :: nblocks,/;"	k	type:input
nblocks_	debug_b.F90	/^  integer(4) :: nblocks_,/;"	v	program:rixs
nblocks_	rixs_oscstr.F90	/^  integer(4) :: nblocks_,/;"	v	program:rixs_oscstr
nblocks_	rixs_pathway.F90	/^  integer(4) :: nblocks_,/;"	v	program:rixs_pathway
ngroups	modmpi.F90	/^    integer(4) :: ngroups /;"	k	type:procgroup
nk	mod_blocks.F90	/^    integer(4) :: nk /;"	k	type:block1d
nk	mod_blocks.F90	/^    integer(4) :: nk /;"	k	type:block2d
nk	mod_blocks.F90	/^    integer(4) :: nk /;"	k	type:block3d
nk0	mod_io.F90	/^    integer(4) :: hamsize, lu,uu,lo,uo, nk0,/;"	k	type:io
nk_	debug_b.F90	/^  integer(4) :: nk_,/;"	v	program:rixs
nk_	rixs_oscstr.F90	/^  integer(4) :: nblocks_, blsz_,nk_,/;"	v	program:rixs_oscstr
nk_	rixs_pathway.F90	/^  integer(4) :: nblocks_, blsz_,nk_,/;"	v	program:rixs_pathway
nkmax	debug_b.F90	/^  integer :: nkmax,/;"	v	program:rixs
nkmax	mod_io.F90	/^    integer(4) :: hamsize, lu,uu,lo,uo, nk0, nkmax,/;"	k	type:io
nkmax	rixs_oscstr.F90	/^  integer :: nkmax,/;"	v	program:rixs_oscstr
nkmax	rixs_pathway.F90	/^  integer :: nkmax,/;"	v	program:rixs_pathway
no	debug_b.F90	/^  integer :: nkmax, nu, no,/;"	v	program:rixs
no	mod_io.F90	/^    integer(4) :: hamsize, lu,uu,lo,uo, nk0, nkmax, nu, no$/;"	k	type:io
no	rixs_oscstr.F90	/^  integer :: nkmax, nu, no,/;"	v	program:rixs_oscstr
no2	debug_b.F90	/^  integer :: nkmax, nu, no, nu2, no2$/;"	v	program:rixs
no_core	rixs_pathway.F90	/^  integer :: nkmax, nu_optical, no_optical, nu_core, no_core,/;"	v	program:rixs_pathway
no_optical	rixs_pathway.F90	/^  integer :: nkmax, nu_optical, no_optical,/;"	v	program:rixs_pathway
nofblock	mod_blocks.F90	/^  function nofblock(/;"	f	module:mod_blocks
nofset	modmpi.F90	/^    function nofset(/;"	f	module:modmpi
nstatc	mod_io.F90	/^    integer :: nblocks, nstato, nstatc$/;"	k	type:input
nstato	mod_io.F90	/^    integer :: nblocks, nstato,/;"	k	type:input
nu	debug_b.F90	/^  integer :: nkmax, nu,/;"	v	program:rixs
nu	mod_io.F90	/^    integer(4) :: hamsize, lu,uu,lo,uo, nk0, nkmax, nu,/;"	k	type:io
nu	rixs_oscstr.F90	/^  integer :: nkmax, nu,/;"	v	program:rixs_oscstr
nu2	debug_b.F90	/^  integer :: nkmax, nu, no, nu2,/;"	v	program:rixs
nu_core	rixs_pathway.F90	/^  integer :: nkmax, nu_optical, no_optical, nu_core,/;"	v	program:rixs_pathway
nu_optical	rixs_pathway.F90	/^  integer :: nkmax, nu_optical,/;"	v	program:rixs_pathway
num_vars	m_config.f90	/^     integer                      :: num_vars /;"	k	type:CFG_t
offset	mod_blocks.F90	/^    integer(4) :: offset /;"	k	type:block1d
offset	mod_blocks.F90	/^    integer(4), dimension(2) :: offset /;"	k	type:block2d
omega	debug_b.F90	/^  real(8), allocatable :: omega(/;"	v	program:rixs
omega	mod_io.F90	/^    real(8), allocatable :: omega(/;"	k	type:input
omega	rixs_oscstr.F90	/^  real(8), allocatable :: omega(/;"	v	program:rixs_oscstr
omega2	debug_b.F90	/^  real(8), allocatable :: omega(:), omega2(/;"	v	program:rixs
omega2	rixs_oscstr.F90	/^  real(8), allocatable :: omega(:), omega2(/;"	v	program:rixs_oscstr
optical	debug_b.F90	/^  type(io) :: optical,/;"	v	program:rixs
optical	rixs_oscstr.F90	/^  type(io) :: optical$/;"	v	program:rixs_oscstr
optical	rixs_pathway.F90	/^  type(io) :: optical,/;"	v	program:rixs_pathway
optical_id	rixs_oscstr.F90	/^  integer(hid_t) :: optical_id,/;"	v	program:rixs_oscstr
optical_id	rixs_pathway.F90	/^  integer(hid_t) :: core_id, optical_id,/;"	v	program:rixs_pathway
oscstr	debug_b.F90	/^  complex(8), allocatable :: oscstr_/;"	v	program:rixs
oscstr_b	debug_b.F90	/^  complex(8), allocatable :: oscstr_b(/;"	v	program:rixs
oscstr_b	rixs_oscstr.F90	/^  type(block1d) :: oscstr_b$/;"	v	program:rixs_oscstr
oscstr_id	rixs_oscstr.F90	/^  integer(hid_t) :: energy_id, oscstr_id,/;"	v	program:rixs_oscstr
output_id	rixs_oscstr.F90	/^  integer(hid_t) :: optical_id, output_id,/;"	v	program:rixs_oscstr
parition_var_list	m_config.f90	/^  subroutine parition_var_list(/;"	s
parse_line	m_config.f90	/^  subroutine parse_line(/;"	s
phdf5_cleanup	mod_phdf5.F90	/^  subroutine phdf5_cleanup(/;"	s	module:mod_phdf5
phdf5_close_file	mod_phdf5.F90	/^  subroutine phdf5_close_file(/;"	s	module:mod_phdf5
phdf5_create_file	mod_phdf5.F90	/^  subroutine phdf5_create_file(/;"	s	module:mod_phdf5
phdf5_create_group	mod_phdf5.F90	/^  subroutine phdf5_create_group(/;"	s	module:mod_phdf5
phdf5_exist_group	mod_phdf5.F90	/^    logical function phdf5_exist_group(/;"	f	module:mod_phdf5
phdf5_finalize	mod_phdf5.F90	/^  subroutine phdf5_finalize$/;"	s	module:mod_phdf5
phdf5_get_dims	mod_phdf5.F90	/^    subroutine phdf5_get_dims(/;"	s	module:mod_phdf5
phdf5_initialize	mod_phdf5.F90	/^  subroutine phdf5_initialize$/;"	s	module:mod_phdf5
phdf5_open_file	mod_phdf5.F90	/^  subroutine phdf5_open_file(/;"	s	module:mod_phdf5
phdf5_read_array_d	mod_phdf5.F90	/^subroutine phdf5_read_array_d(/;"	s
phdf5_read_array_i	mod_phdf5.F90	/^subroutine phdf5_read_array_i(/;"	s
phdf5_read_d	mod_phdf5.F90	/^  subroutine phdf5_read_d(/;"	s	module:mod_phdf5
phdf5_read_i	mod_phdf5.F90	/^  subroutine phdf5_read_i(/;"	s	module:mod_phdf5
phdf5_read_z	mod_phdf5.F90	/^  subroutine phdf5_read_z(/;"	s	module:mod_phdf5
phdf5_setup_read	mod_phdf5.F90	/^  subroutine phdf5_setup_read(/;"	s	module:mod_phdf5
phdf5_setup_write	mod_phdf5.F90	/^  subroutine phdf5_setup_write(/;"	s	module:mod_phdf5
phdf5_write_array_d	mod_phdf5.F90	/^subroutine phdf5_write_array_d(/;"	s
phdf5_write_d	mod_phdf5.F90	/^  subroutine phdf5_write_d(/;"	s	module:mod_phdf5
phdf5_write_z	mod_phdf5.F90	/^  subroutine phdf5_write_z(/;"	s	module:mod_phdf5
pmat	debug_b.F90	/^  complex(8), allocatable :: chi_core(:,:,:), pmat(/;"	v	program:rixs
pmat_id	rixs_pathway.F90	/^  integer(hid_t) :: core_id, optical_id, pmat_id,/;"	v	program:rixs_pathway
pol	debug_b.F90	/^  real(8) :: pol(/;"	v	program:rixs
pol	mod_io.F90	/^    real(8) :: pol(/;"	k	type:input
pol	rixs_oscstr.F90	/^  real(8) :: pol(/;"	v	program:rixs_oscstr
prepare_get_var	m_config.f90	/^  subroutine prepare_get_var(/;"	s
prepare_store_var	m_config.f90	/^  subroutine prepare_store_var(/;"	s
print_properties1d	mod_blocks.F90	/^  subroutine print_properties1d(/;"	s	module:mod_blocks
print_properties2d	mod_blocks.F90	/^  subroutine print_properties2d(/;"	s	module:mod_blocks
procgroup	modmpi.F90	/^  type procgroup$/;"	t	module:modmpi
procofindex	modmpi.F90	/^    function procofindex(/;"	f	module:modmpi
procs	modmpi.F90	/^    integer(4) :: procs$/;"	k	type:mpiinfo
procs	modmpi.F90	/^  integer(4) :: procs$/;"	v	module:modmpi
put_block1d	mod_blocks.F90	/^  subroutine put_block1d(/;"	s	module:mod_blocks
put_block2d	mod_blocks.F90	/^  subroutine put_block2d(/;"	s	module:mod_blocks
qsort_config	m_config.f90	/^  recursive subroutine qsort_config(/;"	s
rank	modmpi.F90	/^    integer(4) :: rank$/;"	k	type:mpiinfo
rank	modmpi.F90	/^  integer(4) :: rank$/;"	v	module:modmpi
read_inputfile	mod_io.F90	/^  subroutine read_inputfile(/;"	s	module:mod_io
read_variable	m_config.f90	/^  subroutine read_variable(/;"	s
reduced_	rixs_oscstr.F90	/^  integer :: matsize_(1), reduced_(/;"	v	program:rixs_oscstr
resize_storage	m_config.f90	/^  subroutine resize_storage(/;"	s
rixs	debug_b.F90	/^program rixs$/;"	p
rixs_oscstr	rixs_oscstr.F90	/^program rixs_oscstr$/;"	p
rixs_pathway	rixs_pathway.F90	/^program rixs_pathway$/;"	p
set_param	mod_io.F90	/^  subroutine set_param(/;"	s	module:mod_io
smap	mod_io.F90	/^    integer(4), allocatable :: smap(/;"	k	type:io
sorted	m_config.f90	/^     logical                      :: sorted /;"	k	type:CFG_t
split_category	m_config.f90	/^  subroutine split_category(/;"	s
splittfile	modmpi.F90	/^  logical :: splittfile,/;"	v	module:modmpi
t1_b	rixs_pathway.F90	/^  type(block1d) :: t1_b,/;"	v	program:rixs_pathway
t1_id	rixs_pathway.F90	/^  integer(hid_t) :: t1_id,/;"	v	program:rixs_pathway
t_b	rixs_pathway.F90	/^  type(block1d) :: t1_b, t_b$/;"	v	program:rixs_pathway
t_block	debug_b.F90	/^  type(block1d) :: eval_b, t_block,/;"	v	program:rixs
terminate	modmpi.F90	/^    subroutine terminate$/;"	s	module:modmpi
test	rixs_oscstr.F90	/^  real(8) ::  test$/;"	v	program:rixs_oscstr
test	rixs_pathway.F90	/^  real(8) ::  test$/;"	v	program:rixs_pathway
tprime	debug_b.F90	/^  complex(8), allocatable :: B_matrix(:,:,:), tprime(/;"	v	program:rixs
tprime_b	debug_b.F90	/^  type(block3d) :: matB_b, matA_b, tprime_b$/;"	v	program:rixs
transform2matrix	mod_rixs.F90	/^  subroutine transform2matrix(/;"	s	module:mod_rixs
transform2matrix_b	mod_blocks.F90	/^    subroutine transform2matrix_b(/;"	s	module:mod_blocks
transform2vector	mod_rixs.F90	/^  subroutine transform2vector(/;"	s	module:mod_rixs
transform2vector_b	mod_blocks.F90	/^    subroutine transform2vector_b(/;"	s	module:mod_blocks
transform_matrix2matrix	mod_blocks.F90	/^    subroutine transform_matrix2matrix(/;"	s	module:mod_blocks
transform_matrix2vector	mod_blocks.F90	/^    subroutine transform_matrix2vector(/;"	s	module:mod_blocks
trim_comment	m_config.f90	/^  subroutine trim_comment(/;"	s
uo	mod_io.F90	/^    integer(4) :: hamsize, lu,uu,lo,uo,/;"	k	type:io
uu	mod_io.F90	/^    integer(4) :: hamsize, lu,uu,/;"	k	type:io
vars	m_config.f90	/^     type(CFG_var_t), allocatable :: vars(/;"	k	type:CFG_t
vecA_b	debug_b.F90	/^  type(block1d) :: eval_b, t_block, vecB_b, vecA_b$/;"	v	program:rixs
vecA_b	rixs_oscstr.F90	/^  type(block1d) :: vecA_b,/;"	v	program:rixs_oscstr
vecA_id	rixs_oscstr.F90	/^  integer(hid_t) :: energy_id, oscstr_id, vecA_id$/;"	v	program:rixs_oscstr
vecB_b	debug_b.F90	/^  type(block1d) :: eval_b, t_block, vecB_b,/;"	v	program:rixs
w1	rixs_oscstr.F90	/^  integer :: nkmax, nu, no, w1$/;"	v	program:rixs_oscstr
zcontent	mod_blocks.F90	/^    complex(8), allocatable :: zcontent(/;"	k	type:block1d
zcontent	mod_blocks.F90	/^    complex(8), allocatable :: zcontent(/;"	k	type:block2d
zcontent	mod_blocks.F90	/^    complex(8), allocatable :: zcontent(/;"	k	type:block3d
